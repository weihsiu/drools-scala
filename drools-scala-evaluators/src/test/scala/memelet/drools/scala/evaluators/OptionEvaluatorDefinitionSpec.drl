package memelet.drools.scala.evaluators

import memelet.drools.scala.evaluators.OptionEvaluatorDefinitionSpec.*

dialect "mvel"

rule "is_none"
when
  f: StringFact(value == None, rule == "is_none")
then
  System.out.println("*** is_none " + f)
end

rule "is_not_none"
when
  f: StringFact(value != None, rule == "is_not_none")
then
  System.out.println("*** is_not_none " + f)
end

rule "is_some__literal"
when
  f: StringFact(value isSome "some", rule == "is_some__literal")
then
  System.out.println("*** is_some__literal " + f)
end

rule "not_is_some__literal"
when
  f: StringFact(value not isSome "other", rule == "not_is_some__literal")
then
  System.out.println("*** not_is_some__literal " + f)
end

rule "smoke_1"
when
  v: Data()
  f2: DataFact(value isSome v, rule == "smoke_1")
then
  System.out.println("*** smoke_1")
end

rule "smoke_2"
when
  f1: StringFact(rule == "smoke_2", rule == "smoke_2")
then
  System.out.println("*** smoke_2")
end

